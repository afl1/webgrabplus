**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: sk.port-network.com
* @MinSWversion: V1.57
* @Revision 16 - [12/07/2017] afl1
*   - new url sk.port-network.com
* @Revision 15 - [22/11/2016] Blackbear199
*   - add Live,Repeat
*   - showsplit fix(some shows were skipped).
* @Revision 14 - [20/11/2016] Blackbear199
*   - description fix
* @Revision 13 - [04/11/2016] Blackbear199
*   - site changes
* @Revision 12 - [30/06/2016] Blackbear199
*   - improvements.added subtitle,episode
* @Revision 11 - [22/02/2016] Blackbear199
*   - rewrite
* @Revision 10 - [04/09/2014] Jan van Straaten
*   - maxdays=11.1, added customheader
* @Revision 9 - [04/09/2014] Jan van Straaten
*   - maxdays=11.1, added customheader, corrected error in presenter
* @Revision 8 - [03/09/2014] Jan van Straaten
* 	- removed firstday=now, changed maxdays=5.1
* @Revision 7 - [14/11/2013] Francis De Paemeleere
* @Remarks:
*   adjusted version of port.rs
* @header_end
**------------------------------------------------------------------------------------------------

site {url=sk.port-network.com|timezone=Europe/Bratislava|maxdays=11.1|cultureinfo=sk-SK|charset=iso-8859-2|titlematchfactor=90}
url_index{url()|http://sk.port-network.com/pls/w/tv.channel?i_date=|urldate|&i_ch=|channel|&i_xday=11}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|yyyy-MM-dd}
*
* scrub the showsplit in two day period fragments:
* makes use of the alternative scrubstring tructure {|bs|es||be}, = simple 'slice' @ es
*index_showsplit.scrub {multi|{"id":|||}
index_urlchannellogo {url(scope=datelogo)||logo":"||"|"}
*
scope.range{(indexshowdetails)|end}
index_start.scrub {regex||"start_datetime":"(.+?)[-+]\d{2}:\d{2}||}
index_stop.scrub {regex||"end_datetime":"(.+?)[-+]\d{2}:\d{2}||}
index_title.scrub {single|"title":"||"|"}
index_subtitle.scrub {single|"episode_title":"||"|"}
index_temp_1.scrub {single|<span class='mtxt'>||</span>|</span>}
index_description.scrub {single('index_urlshow' "")|"italics":"||","|","}
index_description.modify {addstart('index_temp_1' ~ "\(ism.\)")|(Ismétlés).}
index_description.modify {addstart('index_temp_1' ~ "\(élő\)")|(Élő).}
*
index_urlshow {url|http://port.hu|"film_url":"||"|"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
end_scope
*
scope.range{(showdetails)|end}
title.scrub {single|<!-- title -->|<h1>|</h1>|<!-- /title -->}
title.modify {remove(type=regex)|\s*<small>[^<]*</small>}
title.modify {replace| / |\|}
title.modify {substring(type=element)|0 1}
titleoriginal.scrub {single|<!-- title -->|<small>|</small>|<!-- /title -->}
titleoriginal.modify {remove|/}
description.scrub {single|<div class="description">|<article>|</article>|</div>}
*
actor.scrub {multi(max=5)|<label>herec:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
director.scrub {multi(max=2)|<label>réžia:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
writer.scrub {multi(max=2)|<label>scenár:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
composer.scrub {multi(max=2)|<label>hudba:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
producer.scrub {multi(max=2)|<label>produkcia:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
presenter.scrub {multi(max=2)|<label>moderátor:</label>|<span class="itemprop" itemprop="name">|</span>|</li>}
rating.scrub {single|<section class="row no-hr details-box">|nmhh_akk/|_age_icon|</section>}
starrating.scrub {single|<div class="vote-box" >|data-value="|"|</div>}
showicon.scrub {single|<!-- images -->|<img src="|"|</a>}
productiondate.scrub {single|<section class="row no-hr details-box">|<div>|</div>|</section>}
category.scrub {single(separator=", " include="film""dráma""horror""thriller""seriál""krimiseriál""show""reality""krimi""komédia""sci-fi""show")|<section class="row no-hr details-box">|<div>|</div>|</section>}
episode.scrub {single(separator=", " include="časť")|<section class="row no-hr details-box">|<div>|</div>|</section>}
episode.modify {cleanup(tags="<"">")}
*
productiondate.modify {calculate(format=productiondate)}
description.modify {cleanup(tags="<strong>""</strong>")}
description.modify {cleanup(tags="<"">")}
description.modify {cleanup}
category.modify {cleanup(tags="<"">")}
category.modify {cleanup(style=name)}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url()|http://sk.port-network.com/pls/tv/tv.prog}
*index_site_id.scrub {multi|id="channelCombo"||</select>|</select>}
*scope.range {(channellist)|end}
*index_site_channel.modify {addstart|'index_site_id'}
*index_site_id.modify {substring(type=regex)|<option .*?value=\"(.*?)\">.*?</}
*index_site_channel.modify {substring(type=regex)|<option .*?>(.*?)</option >}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
